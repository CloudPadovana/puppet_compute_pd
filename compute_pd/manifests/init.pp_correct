class compute_pd (
  $my_ip                = $compute_pd::params::my_ip,
  $nova_db_conn         = $compute_pd::params::nova_db_conn,
  $auth_strategy        = $compute_pd::params::auth_strategy,
  $auth_host            = $compute_pd::params::auth_host,
  $auth_port            = $compute_pd::params::auth_port,
  $nova_admin_user      = $compute_pd::params::nova_admin_user,
  $admin_tenant_name    = $compute_pd::params::admin_tenant_name,
  $nova_admin_password  = $compute_pd::params::nova_admin_password,
  $nova_rpc_backend     = $compute_pd::params::nova_rpc_backend,
  $rabbit_hosts         = $compute_pd::params::rabbit_hosts,
  $live_migration_flag  = $compute_pd::params::live_migration_flag,
  $vnc_enabled          = $compute_pd::params::vnc_enabled,
  $vncserver_listen     = $compute_pd::params::vncserver_listen,
  $libvirt_vif_driver   = $compute_pd::params::libvirt_vif_driver,
  $vncserver_pc_address = $compute_pd::params::vncserver_pc_addres,
  $novncproxy_base_url  = $compute_pd::params::novncproxy_base_url,
  $glance_host          = $compute_pd::params::glance_host,
  $compute_driver       = $compute_pd::params::compute_driver,
  $nova_api_paste_conf  = $compute_pd::params::nova_api_paste_conf,
  $network_api_class    = $compute_pd::params::network_api_class,
  $neutron_url          = $compute_pd::params::neutron_url,
  $neutron_auth_strat   = $compute_pd::params::auth_strategy,
  $neutron_adm_ten_name = $compute_pd::params::admin_tenant_name,
  $neutron_admin_user   = $compute_pd::params::neutron_admin_user,
  $neutron_admin_pass   = $compute_pd::params::neutron_admin_pass,
  $neutron_adm_auth_url = $compute_pd::params::neutron_adm_auth_url,
  $linuxnet_int_driver  = $compute_pd::params::linuxnet_int_driver,
  $security_group_api   = $compute_pd::params::security_group_api,
  $nova_firewall_driver = $compute_pd::params::nova_firewall_driver,
  $libvirt_inject_pass  = $compute_pd::params::libvirt_inject_pass,
  $libvirt_inject_key   = $compute_pd::params::libvirt_inject_key,
  $libvirt_inject_part  = $compute_pd::params::libvirt_inject_part,
  $neutron_md_p_sh_sec  = $compute_pd::params::neutron_md_p_sh_sec,
  $rabbit_ha_queues     = $compute_pd::params::rabbit_ha_queues,
  $cpu_allocation_ratio = $compute_pd::params::cpu_allocation_ratio,
  $libvirt_cpu_mode     = $compute_pd::params::libvirt_cpu_mode,
  $libvirt_cpu_model    = $compute_pd::params::libvirt_cpu_model,
) inherits compute_pd::params {

  # TODO params.pp per OSfamily

# install
  class {'compute_pd::install':}

# setup firewall
  class {'compute_pd::firewall':}

# setup libvirt
  class {'compute_pd::libvirt':}

# disable SELinux

  exec { "setenforce 0":
    path   => "/bin:/sbin:/usr/bin:/usr/sbin",
    onlyif => "which setenforce && getenforce | grep Enforcing",
  }

# setup sysctl

  Exec { path => '/usr/bin:/usr/sbin:/bin:/sbin' }

  Sysctl {
    notify  => Exec["load-sysctl"],
  }  

  $my_sysctl_settings = {
    "net.ipv4.conf.all.rp_filter"     => { value => 0 },
    "net.ipv4.conf.default.rp_filter" => { value => 0 },
  }

  create_resources(sysctl::value,$my_sysctl_settings)

  exec { load-sysctl:
    command => "/sbin/sysctl -p /etc/sysctl.conf",
    refreshonly => true
  }

# do configuration
#  class {'compute_pd::nova_config':}

   exec { 'config_nova_db_conn':
      command     => "openstack-config --set /etc/nova/nova.conf database connection \"${nova_db_conn}\"",
      require     => Package['openstack-utils'],
      unless      => "openstack-config --get /etc/nova/nova.conf database connection 2>/dev/null | /bin/grep \"${nova_db_conn}\" 2>&1 >/dev/null"
    }
#  }




 
}
