class compute_pd {

  # TODO params.pp per OSfamily

# setup firewall
#  Firewall {
#    notify  => Exec["persist-firewall"],
#    require => Exec["purge default firewall"],
#  }

  #    /* purge anything not managed by puppet */
#  resources { 'firewall':
#    purge => true,
#  }

# class {'compute_pd::install':}
# class {'compute_pd::service':}
 class {'compute_pd::firewall':}

# setup libvirt
 class {'compute_pd::libvirt':}

# disable SELinux

  exec { "setenforce 0":
    path   => "/bin:/sbin:/usr/bin:/usr/sbin",
    onlyif => "which setenforce && getenforce | grep Enforcing",
  }

# setup sysctl

  Exec { path => '/usr/bin:/usr/sbin:/bin:/sbin' }

  Sysctl {
    notify  => Exec["load-sysctl"],
  }  

  $my_sysctl_settings = {
    "net.ipv4.conf.all.rp_filter"     => { value => 0 },
    "net.ipv4.conf.default.rp_filter" => { value => 0 },
  }

  create_resources(sysctl::value,$my_sysctl_settings)

  exec { load-sysctl:
    command => "/sbin/sysctl -p /etc/sysctl.conf",
    refreshonly => true
  }

 
}
