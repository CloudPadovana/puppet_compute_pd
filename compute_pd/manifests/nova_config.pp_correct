class compute_pd::nova_config (
  $my_ip                = $compute_pd::params::my_ip,
  $nova_db_conn         = $compute_pd::params::nova_db_conn,
  $auth_strategy        = $compute_pd::params::auth_strategy,
  $auth_host            = $compute_pd::params::auth_host,
  $auth_protocol	= $compute_pd::params::auth_protocol,
  $auth_port            = $compute_pd::params::auth_port,
  $nova_admin_user      = $compute_pd::params::nova_admin_user,
  $admin_tenant_name    = $compute_pd::params::admin_tenant_name,
  $nova_admin_password  = $compute_pd::params::nova_admin_password,
  $nova_rpc_backend     = $compute_pd::params::nova_rpc_backend,
  $rabbit_hosts         = $compute_pd::params::rabbit_hosts,
  $live_migration_flag  = $compute_pd::params::live_migration_flag,
  $vnc_enabled          = $compute_pd::params::vnc_enabled,
  $vncserver_listen     = $compute_pd::params::vncserver_listen,
  $libvirt_vif_driver   = $compute_pd::params::libvirt_vif_driver,
  $vncserver_pc_address = $compute_pd::params::vncserver_pc_addres,
  $novncproxy_base_url  = $compute_pd::params::novncproxy_base_url,
  $glance_host          = $compute_pd::params::glance_host,
  $compute_driver       = $compute_pd::params::compute_driver,
  $nova_api_paste_conf  = $compute_pd::params::nova_api_paste_conf,
  $network_api_class    = $compute_pd::params::network_api_class,
  $neutron_url          = $compute_pd::params::neutron_url,
  $neutron_auth_strat   = $compute_pd::params::auth_strategy,
  $neutron_adm_ten_name = $compute_pd::params::admin_tenant_name,
  $neutron_admin_user   = $compute_pd::params::neutron_admin_user,
  $neutron_admin_pass   = $compute_pd::params::neutron_admin_pass,
  $neutron_adm_auth_url = $compute_pd::params::neutron_adm_auth_url,
  $linuxnet_int_driver  = $compute_pd::params::linuxnet_int_driver,
  $security_group_api   = $compute_pd::params::security_group_api,
  $nova_firewall_driver = $compute_pd::params::nova_firewall_driver,
  $libvirt_inject_pass  = $compute_pd::params::libvirt_inject_pass,
  $libvirt_inject_key   = $compute_pd::params::libvirt_inject_key,
  $libvirt_inject_part  = $compute_pd::params::libvirt_inject_part,
  $neutron_md_p_sh_sec  = $compute_pd::params::neutron_md_p_sh_sec,
  $rabbit_ha_queues     = $compute_pd::params::rabbit_ha_queues,
  $cpu_allocation_ratio = $compute_pd::params::cpu_allocation_ratio,
  $libvirt_cpu_mode     = $compute_pd::params::libvirt_cpu_mode,
  $libvirt_cpu_model    = $compute_pd::params::libvirt_cpu_model,
) inherits compute_pd::params {

   file { '/etc/nova/nova.conf':
	ensure	 => present,
	require    => Package["openstack-nova-common"],
   }


   exec { 'config_nova_db_conn':
      command     => "openstack-config --set /etc/nova/nova.conf database connection \"${nova_db_conn}\"",
      require     => [ File['/etc/nova/nova.conf'], Package['openstack-utils'] ],
      unless      => "openstack-config --get /etc/nova/nova.conf database connection 2>/dev/null | /bin/grep \"${nova_db_conn}\" 2>&1 >/dev/null",
   }

   exec { 'config_nova_auth_strategy':
      command     => "openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy \"${auth_strategy}\"",
      unless      => "openstack-config --get /etc/nova/nova.conf DEFAULT auth_strategy 2>/dev/null | /bin/grep \"${auth_strategy}\" 2>&1 >/dev/null",
      require     => Exec["config_nova_db_conn"],
   }   

   exec { 'config_nova_auth_host':
      command     => "openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_host \"${auth_host}\"",
      unless      => "openstack-config --get /etc/nova/nova.conf keystone_authtoken auth_host 2>/dev/null | /bin/grep \"${auth_host}\" 2>&1 >/dev/null",
      require     => Exec["config_nova_auth_strategy"],
   }

   exec { 'config_nova_auth_protocol':
      command     => "openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_protocol \"${auth_protocol}\"",
      unless      => "openstack-config --get /etc/nova/nova.conf keystone_authtoken auth_protocol 2>/dev/null | /bin/grep \"${auth_protocol}\" 2>&1 >/dev/null",
      require     => Exec["config_nova_auth_host"],
   }

   
}
